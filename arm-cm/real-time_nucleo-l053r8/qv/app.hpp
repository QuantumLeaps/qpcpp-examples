//$file${.::app.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: real-time.qm
// File:  ${.::app.hpp}
//
// This code has been generated by QM 5.3.0 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::app.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef APP_HPP_
#define APP_HPP_

//$declare${Shared} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace APP {

//${Shared::AppSignals} ......................................................
enum AppSignals : QP::QSignal {
    PERIODIC_SPEC_SIG = QP::Q_USER_SIG,
    TIMEOUT_SIG,
    SPORADIC_A_SIG,
    SPORADIC_B_SIG,
    REMINDER_SIG,
    // ...
    MAX_SIG  // the last signal
};

//${Shared::PeriodicSpecEvt} .................................................
class PeriodicSpecEvt : public QP::QEvt {
public:
    std::uint16_t toggles;
    std::uint8_t ticks;

public:
    constexpr PeriodicSpecEvt(
        QP::QSignal s,
        std::uint16_t tg,
        std::uint8_t ti)
     : QP::QEvt(s),
       toggles(tg),
       ticks(ti)
    {}
}; // class PeriodicSpecEvt

//${Shared::SporadicSpecEvt} .................................................
class SporadicSpecEvt : public QP::QEvt {
public:
    std::uint16_t toggles;
    std::uint16_t rtc_toggles;

public:
    constexpr SporadicSpecEvt(
        QP::QSignal s,
        std::uint16_t tg,
        std::uint16_t trc_tg)
     : QP::QEvt(s),
       toggles(tg),
       rtc_toggles(trc_tg)
    {}
}; // class SporadicSpecEvt

//${Shared::AO_Periodic1} ....................................................
extern QP::QActive * const AO_Periodic1;

//${Shared::AO_Periodic4} ....................................................
extern QP::QActive * const AO_Periodic4;

//${Shared::AO_Sporadic2} ....................................................
extern QP::QActive * const AO_Sporadic2;

//${Shared::AO_Sporadic3} ....................................................
extern QP::QActive * const AO_Sporadic3;

} // namespace APP
//$enddecl${Shared} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif // APP_HPP_
